plugins {
  alias libs.plugins.android.application
  alias libs.plugins.kotlin.android
  alias libs.plugins.detekt
}

android {
  compileSdk libs.versions.targetSdk.get().toInteger()
  namespace 'net.rafaeltoledo.reddit.android'

  defaultConfig {
    targetSdk libs.versions.targetSdk.get().toInteger()
    minSdk libs.versions.minSdk.get().toInteger()
  }

  signingConfigs {
    debug {
      storeFile file("$rootDir/distribution/debug.keystore")
    }

    release {
      storeFile file("$rootDir/distribution/release.keystore")
      storePassword System.env.ANDROID_RELEASE_STORE_PASSWORD
      keyAlias 'kmp'
      keyPassword System.env.ANDROID_RELEASE_KEY_PASSWORD
    }
  }

  buildTypes {
    release {
      signingConfig signingConfigs.release

      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }

  compileOptions {
    coreLibraryDesugaringEnabled true

    sourceCompatibility JavaVersion.VERSION_11
    targetCompatibility JavaVersion.VERSION_11
  }

  kotlinOptions {
    jvmTarget = 11
  }

  buildFeatures {
    compose true
  }

  composeOptions {
    kotlinCompilerExtensionVersion = libs.versions.androidx.compose.compiler.get()
  }
}

dependencies {
  implementation project(':shared')

  implementation libs.androidx.activity.compose

  implementation platform(libs.androidx.compose.bom)

  implementation libs.androidx.compose.material.material

  coreLibraryDesugaring libs.android.tools.jdk.desugar

  detektPlugins libs.detekt.compose.rules
}

detekt {
  config = files("$rootDir/config/detekt/detekt.yml")
}
