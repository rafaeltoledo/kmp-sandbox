plugins {
  alias libs.plugins.android.library
  alias libs.plugins.kotlin.multiplatform
  alias libs.plugins.kotlin.serialization
  alias libs.plugins.detekt
}

android {
  compileSdk libs.versions.targetSdk.get().toInteger()
  namespace 'net.rafaeltoledo.reddit'

  defaultConfig {
    multiDexEnabled true
    minSdk libs.versions.minSdk.get().toInteger()
  }

  compileOptions {
    coreLibraryDesugaringEnabled true

    sourceCompatibility JavaVersion.VERSION_11
    targetCompatibility JavaVersion.VERSION_11
  }
}

dependencies {
  coreLibraryDesugaring libs.android.tools.jdk.desugar
}

kotlin {
  android()
  ios()

  [iosX64(), iosArm64(), iosSimulatorArm64()].forEach {
    it.binaries {
      framework {
        baseName = project.name.capitalize()
      }
    }
  }

  sourceSets {
    commonMain {
      dependencies {
        implementation libs.kotlinx.serialization.json
        implementation libs.ktor.client.contentNegotiation
        implementation libs.ktor.client.core
        implementation libs.ktor.client.logging
        implementation libs.ktor.serialization.kotlinx.json
      }
    }

    androidMain {
      dependencies {
        implementation libs.ktor.client.android
      }
    }

    iosMain {
      dependencies {
        implementation libs.ktor.client.ios
      }
    }

    iosSimulatorArm64Main {
      dependsOn iosMain
    }

    iosSimulatorArm64Test {
      dependsOn iosTest
    }
  }
}

dependencies {
  detektPlugins libs.detekt.compose.rules
}

detekt {
  source = files(
    'src/commonMain/kotlin',
    'src/androidMain/kotlin',
    'src/iosMain/kotlin',
  )

  config = files("$rootDir/config/detekt/detekt.yml")
}
